doctype html
head
    meta(http-equiv='Content-Type' content='text/html; charset=utf-8')
    title EI1061 &mdash; Entregable i02
    // Latest compiled and minified CSS
    link(rel='stylesheet' href='https://netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css')
    // Optional theme
    link(rel='stylesheet' href='https://netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap-theme.min.css')
    // Latest compiled and minified JavaScript
    script(src='https://netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js')
    style.
        .cycle-diagram td {
            width: 48px;
            text-align: center;
            font-family: monospace;
            padding: 8px 0 !important;
        }

        .cycle-diagram td:first-child {
            text-align: right;
            font-family: monospace;
            white-space: nowrap;
            padding: 8px !important;
        }

        .cycle-diagram th {
            text-align: center;
        }

        .cycle-diagram tfoot > tr > td {
            text-align: right;
        }

        .cycle-diagram td > div.alert {
            margin-bottom: 0
        }

        .cycle-diagram td > div.alert.start:after {
            content: "↓";
            font-weight: bold;
        }

        .cycle-diagram td > div.alert.end:before {
            content: "↑";
            font-weight: bold;
        }
.container
    .row
        .col-xs-12.col-md-2
            // style="background: url(e_ei1061_i02-1_1.png)"
            .alert.alert-info
                h2 EI1061
                h1 I2
                h3 2013/14
            ul.nav.nav-pills.nav-stacked
                li
                    a(href='#1') Ejercicio 1
                li
                    a(href='#2') Ejercicio 2
                li
                    a(href='#3') Ejercicio 3
                li
                    a(href='#4') Ejercicio 4
                li
                    a(href='#5') Ejercicio 5
                li
                    a(href='#6') Ejercicio 6
                li
                    a(href='#7') Ejercicio 7
        .col-xs-12.col-md-10
            .page-header
                h1 Entregable I2
                h2 EI1061 &mdash; Arquitecturas Avanzadas
            dl
                dt Apellidos y nombre:
                dt Tiempo estimado:
                dd 3h
                dt Tiempo empleado:
            h2 Riesgos de control
            ol
                li
                    a(name='1')
                    p
                        | Lee la secci&oacute;n 2.3.2 del cap&iacute;tulo 2 del libro &ldquo;Arquitectura de Computadores&rdquo; (&ap; 5 p&aacute;ginas). Identifica aquellas partes que se corresponden con los objetivos formativos de dicho tema (los objetivos formativos del tema 1 est&aacute;n en un documento propio en el Aula Virtual).
                    blockquote
                        strong 1.5
                        |  Explicar en qu&eacute; consisten los riesgos de control, y sus causas, consecuencias y soluciones
                li
                    a(name='2')
                    p
                        | Distingue entre evaluar la condici&oacute;n de salto y resolver el salto: Evaluar la condici&oacute;n supone realizar las operaciones necesarias para conocer si el salto se debe producir o no. Resolver un salto incluye evaluarlo, realizar las operaciones necesarias para averiguar la direcci&oacute;n de salto y escribir esa direcci&oacute;n en el PC.
                li
                    a(name='3')
                    p
                        | Considera el procesador sencillo (4 etapas:
                        code IF
                        | ,
                        code ID
                        | ,
                        code ALU
                        | ,
                        code OS
                        | , de un ciclo cada una), donde los riesgos de control se resuelven insertando instrucciones
                        code nop
                        |  tras el salto. &iquest;Cu&aacute;ntas instrucciones
                        code nop
                        |  ser&iacute;a necesario insertar si el salto se resuelve en la etapa ALU? &iquest;Por qu&eacute;?
                    blockquote
                        | Dos instrucciones
                        code nop
                        | , ya que no se podr&iacute;a saber si se da la condici&oacute;n de salto hasta el tercer ciclo de la instrucci&oacute;n que precede al salto. Si el salto es efectivo, el nuevo PC se calcula en la tercera etapa de la instrucci&oacute;n del salto, y para entonces ya hay dos instrucciones en el cauce de ejecuci&oacute;n.
                li
                    a(name='4')
                    p
                        | En el procesador sencillo, si el salto se resuelve en la etapa
                        code ID
                        | , &iquest;cu&aacute;ntas instrucciones
                        code nop
                        |  ser&iacute;a necesario insertar y qu&eacute; tipo de dato (direccionamiento) podremos usar para el desplazamiento respecto al PC? &iquest;Por qu&eacute;?
                    blockquote
                        | Basta una instrucci&oacute;n
                        code nop
                        | , pues en el segundo ciclo de la instrucci&oacute;n del salto ya se puede calcular el nuevo PC, usando para ello un offset sumado al PC actual, que se extrae directamente de un campo de la instrucci&oacute;n.
                li
                    a(name='5')
                    p
                        | En el procesador sencillo, a la hora de evaluar el salto en la etapa
                        code ID
                        | , &iquest;qu&eacute; ventaja presenta el formato de instrucci&oacute;n de salto
                        code bz r3, despl
                        | , donde el salto se produce si
                        code r3
                        |  es cero, frente al formato
                        code bz despl
                        | , donde el salto se produce si el resultado de la instrucci&oacute;n anterior al salto fue cero? Ilustra tu respuesta mediante alg&uacute;n ejemplo.
                    blockquote
                        | En el caso del formato
                        code bz r3, despl
                        | , tenemos que al poder especificar sobre qu&eacute; registro se hace la comparaci&oacute;n con 0, no es necesario esperar a que la etapa
                        code ALU
                        |  de la anterior instrucci&oacute;n termine si no hay dependencias en el salto. En el otro formato la dependencia entre la instrucci&oacute;n anterior al salto y la del salto obliga a que vayan seguidas y no pueden intercalarse instrucciones no dependientes entre ambas.
                li
                    a(name='6')
                    p Considera el siguiente c&oacute;digo
                    pre.

                    p
                        | &iquest;Si r0=0, cu&aacute;ntos ciclos necesita el procesador sencillo para ejecutarlo si los saltos se resuelven en la etapa ID y se tratan mediante la parada del cauce? Asume que existen caminos de atajo en el procesador. &iquest;Cu&aacute;ntos ciclos necesita el procesador sencillo para ejecutarlo si los saltos se resuelven en la etapa ALU y se tratan mediante la t&eacute;cnica de salto retardado? Reorganiza el c&oacute;digo si es posible para minimizar el efecto negativo del salto.
                    table.cycle-diagram.table.table-striped
                        caption
                            strong Resoluci&oacute;n en ID, tratamiento con parada
                        thead
                            tr
                                th Ciclo
                                th 1
                                th 2
                                th 3
                                th 4
                                th 5
                                th 6
                                th 7
                                th 8
                                th 9
                                th 10
                                th 11
                                th 12
                                th 13
                                th &mldr;
                        tbody
                            tr
                                td addi r1, r0, 20
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.start ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='10')
                            tr
                                td bucle: add r2, r2, r1
                                td
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.end ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='9')
                            tr
                                td multi r3, r1, 2
                                td(colspan='2')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.start ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='8')
                            tr
                                td add r4, r4, r3
                                td(colspan='3')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.end ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='7')
                            tr
                                td addi r1, r1, -1
                                td(colspan='4')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.start ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='6')
                            tr
                                td bnez r1, bucle
                                td(colspan='5')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning(style='opacity: 0.5') IF
                                td
                                    .alert.alert-success.end ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='4') &larr; entra en el bucle
                            tr
                                td NOP
                                td(colspan='7')
                                td(style='opacity: 0.5')
                                    .alert.alert-warning *
                                td(style='opacity: 0.5')
                                    .alert.alert-warning *
                                td(style='opacity: 0.5')
                                    .alert.alert-warning *
                                td(style='opacity: 0.5')
                                    .alert.alert-warning *
                                td(colspan='3') &larr; ciclo de parada
                            tr
                                td
                                td(colspan='14') (se repite 20 veces m&aacute;s)
                            tr
                                th(colspan='2') &mldr;
                                th 136
                                th 137
                                th 138
                                th 139
                                th 140
                                th 141
                                th 142
                                th 143
                                th 144
                                th 145
                                th 146
                                th 147
                                th 148
                            tr
                                td add r5, r2, r4
                                td(colspan='7')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='3')
                            tr
                                td sub r6, r2, r4
                                td(colspan='8')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='2')
                            tr
                                td mult r7, r2, r4
                                td(colspan='9')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td
                        tfoot
                            tr
                                td(colspan='15')
                                    strong Total:
                                    |  4 + 20 &times; 7 + 3 = 147 ciclos
                    table.cycle-diagram.table.table-striped
                        caption
                            strong Resoluci&oacute;n en ALU, tratamiento con salto retardado
                        thead
                            tr
                                th Ciclo
                                th 1
                                th 2
                                th 3
                                th 4
                                th 5
                                th 6
                                th 7
                                th 8
                                th 9
                                th 10
                                th 11
                                th 12
                                th 13
                                th &mldr;
                        tbody
                            tr
                                td addi r1, r0, 20
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.start ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='10')
                            tr
                                td bucle: add r2, r2, r1
                                td
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.end ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='9')
                            tr
                                td multi r3, r1, 2
                                td(colspan='2')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.start ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='8')
                            tr
                                td addi r1, r1, -1
                                td(colspan='3')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.start ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='7')
                            tr
                                td bnez r1, bucle
                                td(colspan='4')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.end ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='6') &larr; entra en el bucle
                            tr
                                td
                                    strong add r4, r4, r3
                                td(colspan='5')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='5') &larr; reordenada para rellenar
                            tr
                                td NOP
                                td(colspan='6')
                                td(style='opacity: 0.5')
                                    .alert.alert-warning *
                                td(style='opacity: 0.5')
                                    .alert.alert-warning *
                                td(style='opacity: 0.5')
                                    .alert.alert-warning *
                                td(style='opacity: 0.5')
                                    .alert.alert-warning *
                                td(colspan='4') &larr; ciclo de parada
                            tr
                                td
                                td(colspan='14') (se repite 20 veces m&aacute;s)
                            tr
                                th(colspan='2') &mldr;
                                th 116
                                th 117
                                th 118
                                th 119
                                th 120
                                th 121
                                th 122
                                th 123
                                th 124
                                th 125
                                th 126
                                th 127
                                th 128
                            tr
                                td add r5, r2, r4
                                td(colspan='7')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='3')
                            tr
                                td sub r6, r2, r4
                                td(colspan='8')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='2')
                            tr
                                td mult r7, r2, r4
                                td(colspan='9')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td
                        tfoot
                            tr
                                td(colspan='15')
                                    strong Total:
                                    |  4 + 20 &times; 6 + 3 = 127 ciclos
                li
                    a(name='7')
                    p
                        | Una posible soluci&oacute;n para los saltos es la t&eacute;cnica de predicci&oacute;n no tomado en la que el procesador sigue ejecutanto la(s) instrucci&oacute;n(es) siguiente(s) al salto como si &eacute;ste no se tomase y, cuando el salto se resuelve, las aborta si &eacute;ste s&iacute; deb&iacute;a haber sido tomado. Para el c&oacute;digo anterior, &iquest;cu&aacute;ntos ciclos necesita el procesador sencillo para ejecutarlo si los saltos se resuelven en la etapa ID y se tratan mediante la t&eacute;cnica predicci&oacute;n no tomado? &iquest;y si los saltos se resuelven en la etapa ALU?
                    table.cycle-diagram.table.table-striped
                        caption
                            strong Resoluci&oacute;n en ALU, tratamiento con predicci&oacute;n no tomado
                        thead
                            tr
                                th Ciclo
                                th 1
                                th 2
                                th 3
                                th 4
                                th 5
                                th 6
                                th 7
                                th 8
                                th 9
                                th 10
                                th 11
                                th 12
                                th 13
                                th &mldr;
                        tbody
                            tr
                                td addi r1, r0, 20
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.start ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='10')
                            tr
                                td bucle: add r2, r2, r1
                                td
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.end ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='9')
                            tr
                                td multi r3, r1, 2
                                td(colspan='2')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.start ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='8')
                            tr
                                td addi r1, r1, -1
                                td(colspan='3')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-success.start ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='7')
                            tr
                                td
                                    strong add r4, r4, r3
                                td(colspan='4')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='6') &larr; reordenada para rellenar
                            tr
                                td bnez r1, bucle
                                td(colspan='5')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='5') &larr; entra en el bucle
                            tr
                                td add r5, r2, r4
                                td(colspan='6') se descarta excepto en la &uacute;ltima iteraci&oacute;n &rarr;
                                td
                                    .alert.alert-warning(style='opacity: 0.5') IF
                                td
                                    .alert.alert-warning(style='opacity: 0.5') ID
                                td
                                    .alert.alert-warning(style='opacity: 0.5') ALU
                                td
                                    .alert.alert-warning(style='opacity: 0.5') OS
                                td(colspan='4')
                            tr
                                td sub r6, r2, r4
                                td(colspan='7') &quot; idem
                                td
                                    .alert.alert-warning(style='opacity: 0.5') IF
                                td
                                    .alert.alert-warning(style='opacity: 0.5') ID
                                td
                                    .alert.alert-warning(style='opacity: 0.5') ALU
                                td
                                    .alert.alert-warning(style='opacity: 0.5') OS
                                td(colspan='3')
                            tr
                                td
                                td(colspan='14') (se repite 20 veces m&aacute;s)
                            tr
                                th(colspan='2') &mldr;
                                th 116
                                th 117
                                th 118
                                th 119
                                th 120
                                th 121
                                th 122
                                th 123
                                th 124
                                th 125
                                th 126
                                th 127
                                th 128
                            tr
                                td mult r7, r2, r4
                                td(colspan='7')
                                td
                                    .alert.alert-warning IF
                                td
                                    .alert.alert-warning ID
                                td
                                    .alert.alert-warning ALU
                                td
                                    .alert.alert-warning OS
                                td(colspan='3')
                        tfoot
                            tr
                                td(colspan='15')
                                    strong Total:
                                    |  4 + 20 &times; 7 + 1 = 125 ciclos
            footer
                small Nota: Este entregable forma parte de la evaluaci&oacute;n de la asignatura.
